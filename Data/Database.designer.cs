#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.261
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Repository
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Shows")]
	public partial class Database : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertSet(DomainObjects.Set instance);
    partial void UpdateSet(DomainObjects.Set instance);
    partial void DeleteSet(DomainObjects.Set instance);
    partial void InsertShow(DomainObjects.Show instance);
    partial void UpdateShow(DomainObjects.Show instance);
    partial void DeleteShow(DomainObjects.Show instance);
    partial void InsertSetSong(DomainObjects.SetSong instance);
    partial void UpdateSetSong(DomainObjects.SetSong instance);
    partial void DeleteSetSong(DomainObjects.SetSong instance);
    #endregion
		
		public Database() : 
				base(global::Data.Properties.Settings.Default.ShowsConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public Database(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Database(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Database(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Database(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<DomainObjects.Set> Sets
		{
			get
			{
				return this.GetTable<DomainObjects.Set>();
			}
		}
		
		public System.Data.Linq.Table<DomainObjects.Show> Shows
		{
			get
			{
				return this.GetTable<DomainObjects.Show>();
			}
		}
		
		public System.Data.Linq.Table<DomainObjects.SetSong> SetSongs
		{
			get
			{
				return this.GetTable<DomainObjects.SetSong>();
			}
		}
	}
}
namespace DomainObjects
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Set]")]
	public partial class Set : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _SetId;
		
		private System.Nullable<short> _SetNumber;
		
		private bool _Encore;
		
		private string _Notes;
		
		private System.DateTime _CreatedDate;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private System.Nullable<System.DateTime> _DeletedDate;
		
		private bool _Deleted;
		
		private System.Nullable<System.Guid> _ShowId;
		
		private EntitySet<SetSong> _SetSongs;
		
		private EntityRef<Show> _Show;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSetIdChanging(System.Guid value);
    partial void OnSetIdChanged();
    partial void OnSetNumberChanging(System.Nullable<short> value);
    partial void OnSetNumberChanged();
    partial void OnEncoreChanging(bool value);
    partial void OnEncoreChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    partial void OnDeletedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDeletedDateChanged();
    partial void OnDeletedChanging(bool value);
    partial void OnDeletedChanged();
    partial void OnShowIdChanging(System.Nullable<System.Guid> value);
    partial void OnShowIdChanged();
    #endregion
		
		public Set()
		{
			this._SetSongs = new EntitySet<SetSong>(new Action<SetSong>(this.attach_SetSongs), new Action<SetSong>(this.detach_SetSongs));
			this._Show = default(EntityRef<Show>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SetId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid SetId
		{
			get
			{
				return this._SetId;
			}
			set
			{
				if ((this._SetId != value))
				{
					this.OnSetIdChanging(value);
					this.SendPropertyChanging();
					this._SetId = value;
					this.SendPropertyChanged("SetId");
					this.OnSetIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SetNumber", DbType="SmallInt")]
		public System.Nullable<short> SetNumber
		{
			get
			{
				return this._SetNumber;
			}
			set
			{
				if ((this._SetNumber != value))
				{
					this.OnSetNumberChanging(value);
					this.SendPropertyChanging();
					this._SetNumber = value;
					this.SendPropertyChanged("SetNumber");
					this.OnSetNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Encore", DbType="Bit NOT NULL")]
		public bool Encore
		{
			get
			{
				return this._Encore;
			}
			set
			{
				if ((this._Encore != value))
				{
					this.OnEncoreChanging(value);
					this.SendPropertyChanging();
					this._Encore = value;
					this.SendPropertyChanged("Encore");
					this.OnEncoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeletedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DeletedDate
		{
			get
			{
				return this._DeletedDate;
			}
			set
			{
				if ((this._DeletedDate != value))
				{
					this.OnDeletedDateChanging(value);
					this.SendPropertyChanging();
					this._DeletedDate = value;
					this.SendPropertyChanged("DeletedDate");
					this.OnDeletedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ShowId
		{
			get
			{
				return this._ShowId;
			}
			set
			{
				if ((this._ShowId != value))
				{
					if (this._Show.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShowIdChanging(value);
					this.SendPropertyChanging();
					this._ShowId = value;
					this.SendPropertyChanged("ShowId");
					this.OnShowIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Set_SetSong", Storage="_SetSongs", ThisKey="SetId", OtherKey="SetId")]
		public EntitySet<SetSong> SetSongs
		{
			get
			{
				return this._SetSongs;
			}
			set
			{
				this._SetSongs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Show_Set", Storage="_Show", ThisKey="ShowId", OtherKey="ShowId", IsForeignKey=true)]
		public Show Show
		{
			get
			{
				return this._Show.Entity;
			}
			set
			{
				Show previousValue = this._Show.Entity;
				if (((previousValue != value) 
							|| (this._Show.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Show.Entity = null;
						previousValue.Sets.Remove(this);
					}
					this._Show.Entity = value;
					if ((value != null))
					{
						value.Sets.Add(this);
						this._ShowId = value.ShowId;
					}
					else
					{
						this._ShowId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Show");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SetSongs(SetSong entity)
		{
			this.SendPropertyChanging();
			entity.Set = this;
		}
		
		private void detach_SetSongs(SetSong entity)
		{
			this.SendPropertyChanging();
			entity.Set = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Show")]
	public partial class Show : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ShowId;
		
		private string _VenueName;
		
		private string _City;
		
		private string _State;
		
		private string _Country;
		
		private System.Nullable<System.DateTime> _ShowDate;
		
		private System.Nullable<decimal> _TicketPrice;
		
		private string _Notes;
		
		private System.DateTime _CreatedDate;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private System.Nullable<System.DateTime> _DeletedDate;
		
		private bool _Deleted;
		
		private System.Nullable<int> _Order;
		
		private string _VenueNotes;
		
		private string _PhishNetUrl;
		
		private System.Nullable<int> _PhishNetShowId;
		
		private EntitySet<Set> _Sets;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnShowIdChanging(System.Guid value);
    partial void OnShowIdChanged();
    partial void OnVenueNameChanging(string value);
    partial void OnVenueNameChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnShowDateChanging(System.Nullable<System.DateTime> value);
    partial void OnShowDateChanged();
    partial void OnTicketPriceChanging(System.Nullable<decimal> value);
    partial void OnTicketPriceChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    partial void OnDeletedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDeletedDateChanged();
    partial void OnDeletedChanging(bool value);
    partial void OnDeletedChanged();
    partial void OnOrderChanging(System.Nullable<int> value);
    partial void OnOrderChanged();
    partial void OnVenueNotesChanging(string value);
    partial void OnVenueNotesChanged();
    partial void OnPhishNetUrlChanging(string value);
    partial void OnPhishNetUrlChanged();
    partial void OnPhishNetShowIdChanging(System.Nullable<int> value);
    partial void OnPhishNetShowIdChanged();
    #endregion
		
		public Show()
		{
			this._Sets = new EntitySet<Set>(new Action<Set>(this.attach_Sets), new Action<Set>(this.detach_Sets));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ShowId
		{
			get
			{
				return this._ShowId;
			}
			set
			{
				if ((this._ShowId != value))
				{
					this.OnShowIdChanging(value);
					this.SendPropertyChanging();
					this._ShowId = value;
					this.SendPropertyChanged("ShowId");
					this.OnShowIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VenueName", DbType="VarChar(100)")]
		public string VenueName
		{
			get
			{
				return this._VenueName;
			}
			set
			{
				if ((this._VenueName != value))
				{
					this.OnVenueNameChanging(value);
					this.SendPropertyChanging();
					this._VenueName = value;
					this.SendPropertyChanged("VenueName");
					this.OnVenueNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="VarChar(50)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="Char(2)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="NVarChar(50)")]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowDate", DbType="Date")]
		public System.Nullable<System.DateTime> ShowDate
		{
			get
			{
				return this._ShowDate;
			}
			set
			{
				if ((this._ShowDate != value))
				{
					this.OnShowDateChanging(value);
					this.SendPropertyChanging();
					this._ShowDate = value;
					this.SendPropertyChanged("ShowDate");
					this.OnShowDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TicketPrice", DbType="Money")]
		public System.Nullable<decimal> TicketPrice
		{
			get
			{
				return this._TicketPrice;
			}
			set
			{
				if ((this._TicketPrice != value))
				{
					this.OnTicketPriceChanging(value);
					this.SendPropertyChanging();
					this._TicketPrice = value;
					this.SendPropertyChanged("TicketPrice");
					this.OnTicketPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeletedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DeletedDate
		{
			get
			{
				return this._DeletedDate;
			}
			set
			{
				if ((this._DeletedDate != value))
				{
					this.OnDeletedDateChanging(value);
					this.SendPropertyChanging();
					this._DeletedDate = value;
					this.SendPropertyChanged("DeletedDate");
					this.OnDeletedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Order]", Storage="_Order", DbType="Int")]
		public System.Nullable<int> Order
		{
			get
			{
				return this._Order;
			}
			set
			{
				if ((this._Order != value))
				{
					this.OnOrderChanging(value);
					this.SendPropertyChanging();
					this._Order = value;
					this.SendPropertyChanged("Order");
					this.OnOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VenueNotes", DbType="VarChar(MAX)")]
		public string VenueNotes
		{
			get
			{
				return this._VenueNotes;
			}
			set
			{
				if ((this._VenueNotes != value))
				{
					this.OnVenueNotesChanging(value);
					this.SendPropertyChanging();
					this._VenueNotes = value;
					this.SendPropertyChanged("VenueNotes");
					this.OnVenueNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhishNetUrl", DbType="VarChar(200)")]
		public string PhishNetUrl
		{
			get
			{
				return this._PhishNetUrl;
			}
			set
			{
				if ((this._PhishNetUrl != value))
				{
					this.OnPhishNetUrlChanging(value);
					this.SendPropertyChanging();
					this._PhishNetUrl = value;
					this.SendPropertyChanged("PhishNetUrl");
					this.OnPhishNetUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhishNetShowId", DbType="Int")]
		public System.Nullable<int> PhishNetShowId
		{
			get
			{
				return this._PhishNetShowId;
			}
			set
			{
				if ((this._PhishNetShowId != value))
				{
					this.OnPhishNetShowIdChanging(value);
					this.SendPropertyChanging();
					this._PhishNetShowId = value;
					this.SendPropertyChanged("PhishNetShowId");
					this.OnPhishNetShowIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Show_Set", Storage="_Sets", ThisKey="ShowId", OtherKey="ShowId")]
		public EntitySet<Set> Sets
		{
			get
			{
				return this._Sets;
			}
			set
			{
				this._Sets.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Sets(Set entity)
		{
			this.SendPropertyChanging();
			entity.Show = this;
		}
		
		private void detach_Sets(Set entity)
		{
			this.SendPropertyChanging();
			entity.Show = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SetSong")]
	public partial class SetSong : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _SetSongId;
		
		private System.Nullable<System.Guid> _SetId;
		
		private string _SongName;
		
		private System.Nullable<double> _Length;
		
		private bool _Cover;
		
		private string _Abbreviation;
		
		private System.Nullable<short> _Order;
		
		private string _Tease;
		
		private string _Notes;
		
		private string _SpecialAppearances;
		
		private System.Nullable<short> _JamStyle;
		
		private bool _BustOut;
		
		private bool _Segue;
		
		private System.DateTime _CreatedDate;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private System.Nullable<System.DateTime> _DeletedDate;
		
		private bool _Deleted;
		
		private EntityRef<Set> _Set;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSetSongIdChanging(System.Guid value);
    partial void OnSetSongIdChanged();
    partial void OnSetIdChanging(System.Nullable<System.Guid> value);
    partial void OnSetIdChanged();
    partial void OnSongNameChanging(string value);
    partial void OnSongNameChanged();
    partial void OnLengthChanging(System.Nullable<double> value);
    partial void OnLengthChanged();
    partial void OnCoverChanging(bool value);
    partial void OnCoverChanged();
    partial void OnAbbreviationChanging(string value);
    partial void OnAbbreviationChanged();
    partial void OnOrderChanging(System.Nullable<short> value);
    partial void OnOrderChanged();
    partial void OnTeaseChanging(string value);
    partial void OnTeaseChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnSpecialAppearancesChanging(string value);
    partial void OnSpecialAppearancesChanged();
    partial void OnJamStyleChanging(System.Nullable<short> value);
    partial void OnJamStyleChanged();
    partial void OnBustOutChanging(bool value);
    partial void OnBustOutChanged();
    partial void OnSegueChanging(bool value);
    partial void OnSegueChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    partial void OnDeletedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDeletedDateChanged();
    partial void OnDeletedChanging(bool value);
    partial void OnDeletedChanged();
    #endregion
		
		public SetSong()
		{
			this._Set = default(EntityRef<Set>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SetSongId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid SetSongId
		{
			get
			{
				return this._SetSongId;
			}
			set
			{
				if ((this._SetSongId != value))
				{
					this.OnSetSongIdChanging(value);
					this.SendPropertyChanging();
					this._SetSongId = value;
					this.SendPropertyChanged("SetSongId");
					this.OnSetSongIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SetId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> SetId
		{
			get
			{
				return this._SetId;
			}
			set
			{
				if ((this._SetId != value))
				{
					if (this._Set.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSetIdChanging(value);
					this.SendPropertyChanging();
					this._SetId = value;
					this.SendPropertyChanged("SetId");
					this.OnSetIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SongName", DbType="VarChar(100)")]
		public string SongName
		{
			get
			{
				return this._SongName;
			}
			set
			{
				if ((this._SongName != value))
				{
					this.OnSongNameChanging(value);
					this.SendPropertyChanging();
					this._SongName = value;
					this.SendPropertyChanged("SongName");
					this.OnSongNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Length", DbType="Float")]
		public System.Nullable<double> Length
		{
			get
			{
				return this._Length;
			}
			set
			{
				if ((this._Length != value))
				{
					this.OnLengthChanging(value);
					this.SendPropertyChanging();
					this._Length = value;
					this.SendPropertyChanged("Length");
					this.OnLengthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cover", DbType="Bit NOT NULL")]
		public bool Cover
		{
			get
			{
				return this._Cover;
			}
			set
			{
				if ((this._Cover != value))
				{
					this.OnCoverChanging(value);
					this.SendPropertyChanging();
					this._Cover = value;
					this.SendPropertyChanged("Cover");
					this.OnCoverChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Abbreviation", DbType="NVarChar(50)")]
		public string Abbreviation
		{
			get
			{
				return this._Abbreviation;
			}
			set
			{
				if ((this._Abbreviation != value))
				{
					this.OnAbbreviationChanging(value);
					this.SendPropertyChanging();
					this._Abbreviation = value;
					this.SendPropertyChanged("Abbreviation");
					this.OnAbbreviationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Order]", Storage="_Order", DbType="SmallInt")]
		public System.Nullable<short> Order
		{
			get
			{
				return this._Order;
			}
			set
			{
				if ((this._Order != value))
				{
					this.OnOrderChanging(value);
					this.SendPropertyChanging();
					this._Order = value;
					this.SendPropertyChanged("Order");
					this.OnOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tease", DbType="VarChar(100)")]
		public string Tease
		{
			get
			{
				return this._Tease;
			}
			set
			{
				if ((this._Tease != value))
				{
					this.OnTeaseChanging(value);
					this.SendPropertyChanging();
					this._Tease = value;
					this.SendPropertyChanged("Tease");
					this.OnTeaseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialAppearances", DbType="VarChar(100)")]
		public string SpecialAppearances
		{
			get
			{
				return this._SpecialAppearances;
			}
			set
			{
				if ((this._SpecialAppearances != value))
				{
					this.OnSpecialAppearancesChanging(value);
					this.SendPropertyChanging();
					this._SpecialAppearances = value;
					this.SendPropertyChanged("SpecialAppearances");
					this.OnSpecialAppearancesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JamStyle", DbType="SmallInt")]
		public System.Nullable<short> JamStyle
		{
			get
			{
				return this._JamStyle;
			}
			set
			{
				if ((this._JamStyle != value))
				{
					this.OnJamStyleChanging(value);
					this.SendPropertyChanging();
					this._JamStyle = value;
					this.SendPropertyChanged("JamStyle");
					this.OnJamStyleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BustOut", DbType="Bit NOT NULL")]
		public bool BustOut
		{
			get
			{
				return this._BustOut;
			}
			set
			{
				if ((this._BustOut != value))
				{
					this.OnBustOutChanging(value);
					this.SendPropertyChanging();
					this._BustOut = value;
					this.SendPropertyChanged("BustOut");
					this.OnBustOutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Segue", DbType="Bit NOT NULL")]
		public bool Segue
		{
			get
			{
				return this._Segue;
			}
			set
			{
				if ((this._Segue != value))
				{
					this.OnSegueChanging(value);
					this.SendPropertyChanging();
					this._Segue = value;
					this.SendPropertyChanged("Segue");
					this.OnSegueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeletedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DeletedDate
		{
			get
			{
				return this._DeletedDate;
			}
			set
			{
				if ((this._DeletedDate != value))
				{
					this.OnDeletedDateChanging(value);
					this.SendPropertyChanging();
					this._DeletedDate = value;
					this.SendPropertyChanged("DeletedDate");
					this.OnDeletedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Set_SetSong", Storage="_Set", ThisKey="SetId", OtherKey="SetId", IsForeignKey=true)]
		public Set Set
		{
			get
			{
				return this._Set.Entity;
			}
			set
			{
				Set previousValue = this._Set.Entity;
				if (((previousValue != value) 
							|| (this._Set.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Set.Entity = null;
						previousValue.SetSongs.Remove(this);
					}
					this._Set.Entity = value;
					if ((value != null))
					{
						value.SetSongs.Add(this);
						this._SetId = value.SetId;
					}
					else
					{
						this._SetId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Set");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
